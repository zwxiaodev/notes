1、不要去关闭线程，而要让它自己结束（stop方法已被弃用，强制结束容易出问题）
2、synchronized优化->偏向锁：markword第一次获取锁时记录这个线程id，认为不会有第二个线程来拿这个锁，同一个线程来了，直接运行
程序征用，升级为自旋锁（默认自旋10次，占用cpu），10次以后升级为重量级锁(不占cpu)-系统锁（重量锁）
执行时间短（加锁代码）线程数少，用自旋；
执行时间长，线程数多，用系统锁
3、synchronized:能保证原子性，但是无法保证指令重排序，volatile：保证可见性和禁止重排序（内存屏蔽）
4.cas：cpu原语支持的，不能被打断的
